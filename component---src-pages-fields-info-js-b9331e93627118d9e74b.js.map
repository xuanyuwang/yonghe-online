{"version":3,"sources":["webpack:///./src/components/fieldsInfo/fields-info-body/fields-info-body.js","webpack:///./node_modules/react-bootstrap/esm/Card.js","webpack:///./src/pages/fields-info.js","webpack:///./src/components/common/fieldsInfoBlock/fieldsInfoBlock.js","webpack:///./node_modules/react-bootstrap/esm/divWithClassName.js","webpack:///./node_modules/react-bootstrap/esm/CardImg.js","webpack:///./node_modules/react-bootstrap/esm/CardContext.js","webpack:///./src/components/fieldsInfo/fieldsInfoLayout.js","webpack:///./node_modules/dom-helpers/esm/camelize.js","webpack:///./node_modules/react-bootstrap/esm/createWithBsPrefix.js","webpack:///./src/components/fieldsInfo/fields-info-top/fields-info-top.js"],"names":["data","useStaticQuery","fields_info_title","title","fiedls_info_date","date","fields_info_content","content","testFieldsInfoJson","src","imageSrc","imageSharp","fluid","className","leftColChildren","style","display","flexDirection","text","imagePosition","rightColChildren","DivStyledAsH5","DivStyledAsH6","CardBody","CardTitle","Component","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","Card","forwardRef","_ref","ref","bsPrefix","bg","border","body","children","_ref$as","as","props","prefix","cardContext","cardHeaderBsPrefix","createElement","Provider","value","displayName","defaultProps","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","IMAGE_POSITION","LEFT_BOTTOM","TOP_MIDDLE","FieldInfoTextBlock","selected","setSelected","useState","offsets","transform","containerStyle","Object","assign","width","background","padding","margin","zIndex","containerID","Math","ceil","random","id","onClick","event","parseInt","currentTarget","backgroundColor","fontSize","fontWeight","paddingBottom","overflow","FieldInfoImage","variant","FieldInfoBlock","result","Fragment","InnerBlock","propTypes","PropTypes","shape","string","any","oneOf","values","p","CardImg","context","createContext","rHyphen","str","toUpperCase","replace","_","chr","slice","createWithBsPrefix","_temp","_ref$displayName","BsComponent","_ref2","_ref2$as","Tag","resolvedPrefix","leftSide","height","rightSide","header_title","header_content","color","maxHeight","aspectRatio"],"mappings":"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","file":"component---src-pages-fields-info-js-b9331e93627118d9e74b.js","sourcesContent":["import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport FieldsInfoBlock from '../../common/fieldsInfoBlock/fieldsInfoBlock';\nimport TwoColumns from '../../common/two-columns/two-columns';\nimport {useStaticQuery, graphql} from 'gatsby';\n\nconst FieldsInfoBody = () => {\n\tconst data = useStaticQuery(graphql`\n    {\n      testFieldsInfoJson {\n        fiedls_info_date\n        fields_info_content\n        fields_info_title\n        header_content\n        header_title\n      }\n      imageSharp(fluid: {originalName: {eq: \"gatsby-icon.png\"}}) {\n        fluid(trim: 2.5) {\n          base64\n\t\t  tracedSVG\n\t\t  src\n          srcWebp\n          srcSetWebp\n          originalImg\n          originalName\n        }\n      }\n    }\n  `);\n\tconst { fields_info_title: title, fiedls_info_date: date, fields_info_content: content} = data.testFieldsInfoJson;\n\tconst { src: imageSrc } = data.imageSharp.fluid;\n\treturn <Container className='fields-info-body'>\n\t\t<TwoColumns\n\t\t\tleftColChildren={\n\t\t\t\t<Container style={{\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tflexDirection: 'column'\n\t\t\t\t}}>\n\t\t\t\t\t<FieldsInfoBlock\n\t\t\t\t\t\ttext={{ title: title, date: date, content: content}}\n\t\t\t\t\t\timageSrc={imageSrc}\n\t\t\t\t\t\timagePosition='left-bottom'\n\t\t\t\t\t/>\n\t\t\t\t\t<FieldsInfoBlock\n\t\t\t\t\t\ttext={{ title: title, date: date, content: content}}\n\t\t\t\t\t\timageSrc={imageSrc}\n\t\t\t\t\t\timagePosition='top-middle'\n\t\t\t\t\t/>\n\t\t\t\t</Container>\n\t\t\t}\n\t\t\trightColChildren={\n\t\t\t\t<Container>\n\t\t\t\t\t<FieldsInfoBlock\n\t\t\t\t\t\ttext={{ title: title, date: date, content: content}}\n\t\t\t\t\t\timageSrc={imageSrc}\n\t\t\t\t\t\timagePosition='top-middle'\n\t\t\t\t\t/>\n\t\t\t\t\t<FieldsInfoBlock\n\t\t\t\t\t\ttext={{ title: title, date: date, content: content}}\n\t\t\t\t\t\timageSrc={imageSrc}\n\t\t\t\t\t\timagePosition='left-bottom'\n\t\t\t\t\t/>\n\t\t\t\t</Container>\n\t\t\t}\n\t\t/>\n\t\t{/* <Row>\n\t\t\t<Col>\n\t\t\t\t<FieldsInfoBlock\n\t\t\t\t\ttext={{ title: title, date: date, content: content}}\n\t\t\t\t\timageSrc={imageSrc}\n\t\t\t\t/>\n\t\t\t</Col>\n\t\t</Row> */}\n\t</Container>;\n};\n\nexport default FieldsInfoBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ?\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;","import React from 'react';\nimport IndustryInfoLayout from '../components/fieldsInfo/fieldsInfoLayout';\n\nconst FieldsInfoPage = () => {\n\treturn <IndustryInfoLayout/>;\n};\n\n\nexport default FieldsInfoPage;","import React, { useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport PropTypes from 'prop-types';\nimport Card from 'react-bootstrap/Card';\n\nconst IMAGE_POSITION = {\n\tLEFT_BOTTOM: 'left-bottom',\n\tTOP_MIDDLE: 'top-middle'\n};\n\nconst FieldInfoTextBlock = (props) => {\n\tconst [selected, setSelected] = useState(false);\n\tconst textBlockClassPrefix = 'field-info-text';\n\tconst baseStyle = {\n\t\twidth: '80%',\n\t\tbackground: 'white',\n\t\tpadding: 0,\n\t\tmargin: 0,\n\t\tzIndex: 1\n\t};\n\tconst offsets = props.imagePosition === IMAGE_POSITION.LEFT_BOTTOM ? {\n\t\ttransform: 'translate(25%, 0%)'\n\t} : {\n\t\ttransform: 'translate(12.5%, -50%)'\n\t};\n\tconst containerStyle = Object.assign(baseStyle, offsets);\n\tconst containerID = Math.ceil(Math.random() * 1000000);\n\treturn <Container\n\t\tid={containerID}\n\t\tclassName={textBlockClassPrefix}\n\t\tstyle={containerStyle}\n\t\tonClick={(event) => {\n\t\t\tif(parseInt(event.currentTarget.id) === containerID){\n\t\t\t\tsetSelected(!selected);\n\t\t\t}else{\n\t\t\t\tsetSelected(false);\n\t\t\t}\n\t\t}}\n\t>\n\t\t<Card.Header style={{\n\t\t\tzIndex: 1,\n\t\t\tbackgroundColor: selected ? '#852314' : ''\n\t\t}}></Card.Header>\n\t\t<Card.Body style={{\n\t\t\tzIndex: 1,\n\t\t\tbackgroundColor: selected ? 'white' : '#dee2e6'\n\t\t}}>\n\t\t\t<Card.Title\n\t\t\t\tclassName={`${textBlockClassPrefix}-title`}\n\t\t\t\tstyle={{ fontSize: '24px', fontWeight: 'bold', paddingBottom: '12px' }}\n\t\t\t>\n\t\t\t\t{props.text.title}\n\t\t\t</Card.Title>\n\t\t\t<Card.Subtitle className={`${textBlockClassPrefix}-data`}>{props.text.date}</Card.Subtitle>\n\t\t\t<Card.Text\n\t\t\t\tclassName={`${textBlockClassPrefix}-content`}\n\t\t\t\tstyle={{ fontSize: '14px', overflow: 'hidden' }}\n\t\t\t>\n\t\t\t\t{props.text.content}\n\t\t\t</Card.Text>\n\t\t</Card.Body>\n\t</Container>;\n};\n\nconst FieldInfoImage = (props) => {\n\tconst baseStyle = { width: '60%' };\n\tconst offsets = props.imagePosition === IMAGE_POSITION.LEFT_BOTTOM ? {\n\t\ttransform: 'translate(10%, -80%)'\n\t} : {\n\t\ttransform: 'translate(33%, 20%)'\n\t};\n\tconst variant = props.imagePosition === IMAGE_POSITION.LEFT_BOTTOM ? 'bottom' : 'top';\n\tconst style = Object.assign(baseStyle, offsets);\n\treturn <Card.Img\n\t\tvariant={variant}\n\t\tsrc={props.imageSrc}\n\t\tstyle={ style }\n\t/>;\n};\n\nconst InnerBlock = (props) => {\n\tlet result;\n\tconst { imagePosition } = props;\n\tif(imagePosition === IMAGE_POSITION.LEFT_BOTTOM){\n\t\tresult = <React.Fragment>\n\t\t\t{FieldInfoTextBlock(props)}\n\t\t\t{FieldInfoImage(props)}\n\t\t</React.Fragment>;\n\t}else if(imagePosition === IMAGE_POSITION.TOP_MIDDLE){\n\t\tresult = <React.Fragment>\n\t\t\t{FieldInfoImage(props)}\n\t\t\t{FieldInfoTextBlock(props)}\n\t\t</React.Fragment>;\n\t}\n\treturn result;\n};\nconst FieldInfoBlock = (props) => {\n\n\treturn (\n\t\t<Card\n\t\t\tclassName=\"field-info-container\"\n\t\t\tborder='light'\n\t\t>\n\t\t\t{InnerBlock(props)}\n\t\t</Card>\n\t);\n};\n\nFieldInfoBlock.propTypes = {\n\ttext: PropTypes.shape({\n\t\ttitle: PropTypes.string,\n\t\tdate: PropTypes.string,\n\t\tcontent: PropTypes.string,\n\t}),\n\timageSrc: PropTypes.any,\n\timagePosition: PropTypes.oneOf([...Object.values(IMAGE_POSITION)])\n};\nexport default FieldInfoBlock;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nexport default (function (className) {\n  return React.forwardRef(function (p, ref) {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, p, {\n      ref: ref,\n      className: classNames(p.className, className)\n    }));\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import React from 'react';\nvar context = React.createContext(null);\ncontext.displayName = 'CardContext';\nexport default context;","import React from 'react';\nimport FieldsInfoBody from './fields-info-body/fields-info-body';\nimport FieldsInfoTop from './fields-info-top/fields-info-top';\n\nconst FieldsInfoLayout = () => {\n\treturn <React.Fragment>\n\t\t<FieldsInfoTop/>\n\t\t<FieldsInfoBody/>\n\t</React.Fragment>;\n};\nexport default FieldsInfoLayout;","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\n\nvar pascalCase = function pascalCase(str) {\n  return str[0].toUpperCase() + camelize(str).slice(1);\n}; // TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\n\n\nexport default function createWithBsPrefix(prefix, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$displayName = _ref.displayName,\n      displayName = _ref$displayName === void 0 ? pascalCase(prefix) : _ref$displayName,\n      Component = _ref.Component,\n      defaultProps = _ref.defaultProps;\n\n  var BsComponent = React.forwardRef(function (_ref2, ref) {\n    var className = _ref2.className,\n        bsPrefix = _ref2.bsPrefix,\n        _ref2$as = _ref2.as,\n        Tag = _ref2$as === void 0 ? Component || 'div' : _ref2$as,\n        props = _objectWithoutPropertiesLoose(_ref2, [\"className\", \"bsPrefix\", \"as\"]);\n\n    var resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/React.createElement(Tag, _extends({\n      ref: ref,\n      className: classNames(className, resolvedPrefix)\n    }, props));\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import React from 'react';\nimport TwoColumns from '../../common/two-columns/two-columns';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\nimport './fields-info-top.scss';\n\nconst leftSide = (props) => {\n\tconst { fluid } = props;\n\treturn <Img fluid={fluid} style={{ height: '100%', width: '100%'}}/>;\n};\nconst rightSide = (props) => {\n\tconst { header_title: title, header_content: content} = props;\n\treturn <div className='' style={{ color: 'white', width: '70%', maxHeight: '70%', height: 'fit-content', display: 'flex', flexDirection: 'column' }}>\n\t\t<div className='' style={{ fontSize: '32px', fontWeight: 'bold', paddingBottom: '12px'}}>\n\t\t\t{title}\n\t\t</div>\n\t\t<div className='' style={{ fontSize: '14px', overflow: 'hidden'}}>\n\t\t\t{content}\n\t\t</div>\n\t</div>;\n};\nconst FieldsInfoTop = () => {\n\tconst data = useStaticQuery(graphql`\n    {\n      imageSharp(fluid: {originalName: {eq: \"example1.jpg\"}}) {\n        fluid {\n          base64\n          tracedSVG\n          srcWebp\n          srcSetWebp\n          originalImg\n          originalName\n        }\n      }\n      testFieldsInfoJson {\n        header_title\n        header_content\n      }\n    }\n  `);\n\treturn <TwoColumns className='fields-info-top'\n\t\tleftColChildren={leftSide({ fluid: data.imageSharp.fluid })}\n\t\trightColChildren={rightSide(data.testFieldsInfoJson)}\n\t\taspectRatio={{ width: 2, height: 1 }}\n\t/>;\n};\n\nexport default FieldsInfoTop;"],"sourceRoot":""}